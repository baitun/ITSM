{"version":3,"sources":["columns.js","TableTickets.js","ModalForm.js","TableTicketsAdmin.js","auth.js","App.js","serviceWorker.js","index.js"],"names":["fields","dataIndex","title","visible","required","sorter","a","b","locality","localeCompare","onFilter","value","record","indexOf","filters","text","formComponent","react_default","createElement","es_select","Option","system","input","TextArea","autosize","minRows","render","entryid","href","concat","target","rel","isopen","es_checkbox","disabled","checked","parseInt","date_picker","columns","filter","val","tickets","require","TicketDetails","map","f","key","TableTickets","table","dataSource","expandedRowRender","pagination","size","rowClassName","index","React","Component","ModalForm","Form","create","_React$Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","console","log","props","_this$props","onCancel","onOk","form","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","formItems","es_form","Item","assign","label","rules","message","valuePropName","initialValue","moment","isValid","modal","state","isModalOpen","modalRecord","showModal","_this","setState","handleModalCancel","handleModalOk","formRef","validateFields","err","values","resetFields","saveFormRef","_this2","info","columnsWithButtons","toConsumableArray","Fragment","es_button","shape","icon","onClick","popconfirm","onConfirm","type","src_ModalForm","wrappedComponentRef","hasRole","user","roles","some","role","includes","rights","App","call","locale_provider","locale","ru_RU","BrowserRouter","layout","Header","className","menu","mode","theme","style","lineHeight","Link","to","prevState","Content","padding","background","minHeight","Switch","Redirect","exact","from","Route","path","component","TableTicketsAdmin","Footer","textAlign","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51d634b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input, Select, Checkbox, DatePicker } from 'antd';\r\n\r\nexport const fields = [\r\n  {\r\n    dataIndex: 'locality',\r\n    title: 'Место (город)',\r\n    visible: true,\r\n    required: true,\r\n    sorter: (a, b) => ('' + a.locality).localeCompare(b.locality),\r\n    onFilter: (value, record) => record.locality.indexOf(value) === 0,\r\n    filters: [\r\n      { text: 'Irkutsk', value: 'Irkutsk' },\r\n      { text: 'Rostov', value: 'Rostov' },\r\n      { text: 'Saransk', value: 'Saransk' },\r\n      { text: 'Chelyabinsk', value: 'Chelyabinsk' },\r\n    ],\r\n    formComponent: (\r\n      <Select>\r\n        <Select.Option value=\"0\">Irkutsk</Select.Option>\r\n        <Select.Option value=\"1\">Rostov-on-Don</Select.Option>\r\n        <Select.Option value=\"2\">Saransk</Select.Option>\r\n        <Select.Option value=\"3\">Chelyabinsk</Select.Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    dataIndex: 'system',\r\n    title: 'Система',\r\n    visible: true,\r\n    required: false,\r\n    sorter: (a, b) => a.system > b.system,\r\n    formComponent: (\r\n      <Select>\r\n        <Select.Option value=\"0\">BPM</Select.Option>\r\n        <Select.Option value=\"1\">CRM</Select.Option>\r\n        <Select.Option value=\"2\">Mail</Select.Option>\r\n        <Select.Option value=\"3\">Internet</Select.Option>\r\n      </Select>\r\n    ),\r\n  },\r\n  {\r\n    dataIndex: 'description',\r\n    title: 'Описание',\r\n    visible: false,\r\n    required: false,\r\n    formComponent: <Input.TextArea autosize={{ minRows: 2 }} />,\r\n  },\r\n  {\r\n    dataIndex: 'entryid',\r\n    title: 'BPM Ticket',\r\n    visible: true,\r\n    required: false,\r\n    render: entryid => (\r\n      <a\r\n        href={`https://bpmonline.com/?tt=${entryid}`}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        {entryid}\r\n      </a>\r\n    ),\r\n    formComponent: <Input />,\r\n  },\r\n  {\r\n    dataIndex: 'isopen',\r\n    title: 'Открыта?',\r\n    visible: true,\r\n    required: false,\r\n    render: (isopen, record) => <Checkbox disabled checked={isopen} />,\r\n    sorter: (a, b) => a.isopen - b.isopen,\r\n    onFilter: (value, record) => parseInt(value) === record.isopen,\r\n    filters: [{ text: 'Open', value: 1 }, { text: 'Close', value: 0 }],\r\n    formComponent: <Checkbox />,\r\n  },\r\n  {\r\n    dataIndex: 'bdate',\r\n    title: 'Дата начала',\r\n    visible: false,\r\n    required: false,\r\n    formComponent: <DatePicker />,\r\n  },\r\n  {\r\n    dataIndex: 'edate',\r\n    title: 'Дата завершения',\r\n    visible: false,\r\n    required: false,\r\n    formComponent: <DatePicker />,\r\n  },\r\n];\r\n\r\nconst columns = fields.filter(val => val.visible);\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport './TableTickets.css';\r\nimport columns, { fields } from './columns';\r\n\r\nconst tickets = require('./data/tickets.json');\r\n\r\nconst TicketDetails = record => {\r\n  return fields\r\n    .filter(val => !val.visible)\r\n    .map(f => (\r\n      <div key={f.dataIndex}>\r\n        <b>{f.title}:</b> {record[f.dataIndex]}\r\n      </div>\r\n    ));\r\n};\r\nclass TableTickets extends React.Component {\r\n  render() {\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={tickets}\r\n        expandedRowRender={TicketDetails}\r\n        pagination={false}\r\n        size=\"middle\"\r\n        rowClassName={(record, index) =>\r\n          record.isopen ? 'ticket-opened' : 'ticket-closed'\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableTickets;\r\n","import React from 'react';\r\nimport { Form, Modal } from 'antd';\r\nimport moment from 'moment';\r\nimport { fields } from './columns';\r\n\r\nconst ModalForm = Form.create()(\r\n  class extends React.Component {\r\n    render() {\r\n      console.log('Render ModalForm, record =', this.props.record);\r\n      const { visible, onCancel, onOk, form, record } = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18 },\r\n      };\r\n      const formItems = fields.map(f => (\r\n        <Form.Item {...formItemLayout} label={f.title} key={f.dataIndex}>\r\n          {getFieldDecorator(f.dataIndex, {\r\n            rules: [\r\n              {\r\n                required: f.required,\r\n                message: `Please Input ${f.title}!`,\r\n              },\r\n            ],\r\n            valuePropName: f.dataIndex === 'isopen' ? 'checked' : 'value',\r\n            initialValue:\r\n              f.dataIndex === 'bdate' || f.dataIndex === 'edate'\r\n                ? moment(record[f.dataIndex]).isValid()\r\n                  ? moment(record[f.dataIndex])\r\n                  : null\r\n                : record[f.dataIndex],\r\n          })(f.formComponent)}\r\n        </Form.Item>\r\n      ));\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Ticket properties\"\r\n          onCancel={onCancel}\r\n          onOk={onOk}\r\n        >\r\n          <Form>{formItems}</Form>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default ModalForm;\r\n","import React from 'react';\r\nimport { Table, Button, Popconfirm } from 'antd';\r\nimport './TableTickets.css';\r\nimport columns, { fields } from './columns';\r\nimport ModalForm from './ModalForm';\r\n\r\nconst tickets = require('./data/tickets.json');\r\n\r\nconst TicketDetails = record => {\r\n  return fields\r\n    .filter(val => !val.visible)\r\n    .map(f => (\r\n      <div key={f.dataIndex}>\r\n        <b>{f.title}:</b> {record[f.dataIndex]}\r\n      </div>\r\n    ));\r\n};\r\nclass TableTickets extends React.Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    modalRecord: {},\r\n  };\r\n\r\n  showModal = modalRecord => {\r\n    this.setState({ isModalOpen: true, modalRecord });\r\n  };\r\n\r\n  handleModalCancel = () => {\r\n    this.setState({ isModalOpen: false });\r\n  };\r\n\r\n  handleModalOk = () => {\r\n    const form = this.formRef.props.form;\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n\r\n      console.log('Received values of form: ', values);\r\n      form.resetFields();\r\n      this.setState({ isModalOpen: false });\r\n    });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n  };\r\n\r\n  render() {\r\n    console.info('TableTicketsAdmin render');\r\n    const columnsWithButtons = [\r\n      ...columns,\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'action',\r\n        render: (text, record) => (\r\n          <>\r\n            <Button\r\n              shape=\"circle\"\r\n              icon=\"edit\"\r\n              title=\"edit\"\r\n              onClick={() => this.showModal(record)}\r\n            />\r\n            &nbsp;\r\n            <Popconfirm\r\n              title=\"Sure to cancel?\"\r\n              onConfirm={() => console.log(record.key)}\r\n            >\r\n              <Button shape=\"circle\" icon=\"delete\" title=\"delete\" />\r\n            </Popconfirm>\r\n          </>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" onClick={() => this.showModal(null)}>\r\n          New Ticket\r\n        </Button>\r\n        <ModalForm\r\n          wrappedComponentRef={this.saveFormRef}\r\n          visible={this.state.isModalOpen}\r\n          onCancel={this.handleModalCancel}\r\n          onOk={this.handleModalOk}\r\n          record={this.state.modalRecord}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Table\r\n          columns={columnsWithButtons}\r\n          dataSource={tickets}\r\n          expandedRowRender={TicketDetails}\r\n          pagination={false}\r\n          size=\"middle\"\r\n          rowClassName={(record, index) =>\r\n            record.isopen ? 'ticket-opened' : 'ticket-closed'\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableTickets;\r\n","// https://alligator.io/react/simple-authorization/\r\n\r\nexport const isAuthenticated = user => !!user;\r\n\r\nexport const isAllowed = (user, rights) =>\r\n  rights.some(right => user.rights.includes(right));\r\n\r\nexport const hasRole = (user, roles) =>\r\n  roles.some(role => user.roles.includes(role));\r\n","import React from 'react';\r\nimport TableTickets from './TableTickets';\r\nimport TableTicketsAdmin from './TableTicketsAdmin';\r\nimport { LocaleProvider, Menu, Layout, Icon } from 'antd';\r\nimport ru_RU from 'antd/lib/locale-provider/ru_RU';\r\nimport { BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom';\r\nimport { hasRole, isAllowed } from './auth';\r\n\r\nconst user = {\r\n  roles: ['admin'],\r\n  rights: ['can_view_articles'],\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: user,\r\n    };\r\n  }\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <LocaleProvider locale={ru_RU}>\r\n        <BrowserRouter>\r\n          <Layout>\r\n            <Layout.Header>\r\n              <div className=\"h-logo\">ITSM</div>\r\n              <Menu\r\n                mode=\"horizontal\"\r\n                theme=\"dark\"\r\n                style={{ lineHeight: '64px' }}\r\n              >\r\n                <Menu.Item>\r\n                  <Link to=\"/\">Список проблем</Link>\r\n                </Menu.Item>\r\n                {hasRole(user, ['admin']) && (\r\n                  <Menu.Item>\r\n                    <Link to=\"admin\">Admin</Link>\r\n                  </Menu.Item>\r\n                )}\r\n              </Menu>\r\n              <div className=\"h-user\">\r\n                <Icon\r\n                  type={user.roles.includes('admin') ? 'logout' : 'login'}\r\n                  title={user.roles.includes('admin') ? 'logout' : 'login'}\r\n                  onClick={() =>\r\n                    this.setState(prevState => ({\r\n                      user: {\r\n                        roles: prevState.user.roles.includes('admin')\r\n                          ? ['user']\r\n                          : ['admin'],\r\n                      },\r\n                    }))\r\n                  }\r\n                />\r\n              </div>\r\n            </Layout.Header>\r\n            <Layout.Content style={{ padding: '0 50px' }}>\r\n              <div\r\n                style={{\r\n                  background: '#fff',\r\n                  padding: 24,\r\n                  minHeight: 'calc(100vh - 64px - 68px)',\r\n                }}\r\n              >\r\n                {/* <h1>IT Service Management</h1> */}\r\n\r\n                <Switch>\r\n                  <Redirect exact from=\"/\" to=\"/ITSM/\" />\r\n                  <Route exact path=\"/ITSM\" component={TableTickets} />\r\n                  {hasRole(user, ['admin']) && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/ITSM/admin\"\r\n                      component={TableTicketsAdmin}\r\n                    />\r\n                  )}\r\n                  <Route component={() => <div>404. Page Not Found</div>} />\r\n                </Switch>\r\n              </div>\r\n            </Layout.Content>\r\n            <Layout.Footer style={{ textAlign: 'center' }}>\r\n              IT Service Management ©{' '}\r\n              <a href=\"https://github.com/baitun/ITSM\">baitun</a>\r\n            </Layout.Footer>\r\n          </Layout>\r\n        </BrowserRouter>\r\n      </LocaleProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}