{"version":3,"sources":["columns.js","TableTickets.js","ModalForm.js","TableTicketsAdmin.js","auth.js","App.js","serviceWorker.js","index.js"],"names":["fields","dataIndex","title","visible","required","sorter","a","b","locality","localeCompare","onFilter","value","record","indexOf","formComponent","react_default","createElement","input","system","TextArea","autosize","minRows","columns","filter","val","tickets","require","TicketDetails","map","f","key","TableTickets","table","dataSource","expandedRowRender","pagination","size","rowClassName","index","isopen","React","Component","ModalForm","Form","create","_React$Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","console","log","props","_this$props","onCancel","onOk","form","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","formItems","initialValue","moment","isValid","es_form","Item","assign","label","rules","message","concat","valuePropName","modal","state","isModalOpen","modalRecord","showModal","_this","setState","handleModalCancel","handleModalOk","formRef","validateFields","err","values","resetFields","saveFormRef","_this2","info","columnsWithButtons","toConsumableArray","render","text","Fragment","es_button","shape","icon","onClick","popconfirm","onConfirm","type","src_ModalForm","wrappedComponentRef","hasRole","user","roles","some","role","includes","rights","App","call","locale_provider","locale","ru_RU","BrowserRouter","layout","Header","className","menu","mode","theme","style","lineHeight","Link","to","prevState","Content","padding","background","minHeight","Switch","Redirect","exact","from","Route","path","component","TableTicketsAdmin","Footer","textAlign","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10af630f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input, Select, Checkbox, DatePicker } from 'antd';\r\n\r\nexport const fields = [\r\n  {\r\n    dataIndex: 'locality',\r\n    title: 'Регион',\r\n    visible: true,\r\n    required: true,\r\n    sorter: (a, b) => ('' + a.locality).localeCompare(b.locality),\r\n    onFilter: (value, record) => record.locality.indexOf(value) === 0,\r\n\r\n    formComponent: <Input />,\r\n  },\r\n  {\r\n    dataIndex: 'system',\r\n    title: 'IVR',\r\n    visible: true,\r\n    required: false,\r\n    sorter: (a, b) => a.system > b.system,\r\n    formComponent: <Input />,\r\n  },\r\n  {\r\n    dataIndex: 'description',\r\n    title: 'Текст звука',\r\n    visible: false,\r\n    required: false,\r\n    formComponent: <Input.TextArea autosize={{ minRows: 2 }} />,\r\n  },\r\n];\r\n\r\nconst columns = fields.filter(val => val.visible);\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport './TableTickets.css';\r\nimport columns, { fields } from './columns';\r\n\r\nconst tickets = require('./data/tickets.json');\r\n\r\nconst TicketDetails = record => {\r\n  return fields\r\n    .filter(val => !val.visible)\r\n    .map(f => (\r\n      <div key={f.dataIndex}>\r\n        <b>{f.title}:</b> {record[f.dataIndex]}\r\n      </div>\r\n    ));\r\n};\r\nclass TableTickets extends React.Component {\r\n  render() {\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={tickets}\r\n        expandedRowRender={TicketDetails}\r\n        pagination={false}\r\n        size=\"middle\"\r\n        rowClassName={(record, index) =>\r\n          record.isopen ? 'ticket-opened' : 'ticket-closed'\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableTickets;\r\n","import React from 'react';\r\nimport { Form, Modal } from 'antd';\r\nimport moment from 'moment';\r\nimport { fields } from './columns';\r\n\r\nconst ModalForm = Form.create()(\r\n  class extends React.Component {\r\n    render() {\r\n      console.log('Render ModalForm, record =', this.props.record);\r\n      const { visible, onCancel, onOk, form, record } = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18 },\r\n      };\r\n      const formItems = fields.map(f => {\r\n        let initialValue = null;\r\n        if (record) {\r\n          if (\r\n            (f.dataIndex === 'bdate' || f.dataIndex === 'edate') &&\r\n            moment(record[f.dataIndex]).isValid()\r\n          ) {\r\n            initialValue = moment(record[f.dataIndex]);\r\n          } else {\r\n            initialValue = record[f.dataIndex];\r\n          }\r\n        }\r\n        return (\r\n          <Form.Item {...formItemLayout} label={f.title} key={f.dataIndex}>\r\n            {getFieldDecorator(f.dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: f.required,\r\n                  message: `Please Input ${f.title}!`,\r\n                },\r\n              ],\r\n              valuePropName: f.dataIndex === 'isopen' ? 'checked' : 'value',\r\n              initialValue: initialValue,\r\n            })(f.formComponent)}\r\n          </Form.Item>\r\n        );\r\n      });\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Ticket properties\"\r\n          onCancel={onCancel}\r\n          onOk={onOk}\r\n        >\r\n          <Form>{formItems}</Form>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default ModalForm;\r\n","import React from 'react';\r\nimport { Table, Button, Popconfirm } from 'antd';\r\nimport './TableTickets.css';\r\nimport columns, { fields } from './columns';\r\nimport ModalForm from './ModalForm';\r\n\r\nconst tickets = require('./data/tickets.json');\r\n\r\nconst TicketDetails = record => {\r\n  return fields\r\n    .filter(val => !val.visible)\r\n    .map(f => (\r\n      <div key={f.dataIndex}>\r\n        <b>{f.title}:</b> {record[f.dataIndex]}\r\n      </div>\r\n    ));\r\n};\r\nclass TableTickets extends React.Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    modalRecord: {},\r\n  };\r\n\r\n  showModal = modalRecord => {\r\n    this.setState({ isModalOpen: true, modalRecord });\r\n  };\r\n\r\n  handleModalCancel = () => {\r\n    this.setState({ isModalOpen: false });\r\n  };\r\n\r\n  handleModalOk = () => {\r\n    const form = this.formRef.props.form;\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n\r\n      console.log('Received values of form: ', values);\r\n      form.resetFields();\r\n      this.setState({ isModalOpen: false });\r\n    });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n  };\r\n\r\n  render() {\r\n    console.info('TableTicketsAdmin render');\r\n    const columnsWithButtons = [\r\n      ...columns,\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'action',\r\n        render: (text, record) => (\r\n          <>\r\n            <Button\r\n              shape=\"circle\"\r\n              icon=\"edit\"\r\n              title=\"edit\"\r\n              onClick={() => this.showModal(record)}\r\n            />\r\n            &nbsp;\r\n            <Popconfirm\r\n              title=\"Sure to cancel?\"\r\n              onConfirm={() => console.log(record.key)}\r\n            >\r\n              <Button shape=\"circle\" icon=\"delete\" title=\"delete\" />\r\n            </Popconfirm>\r\n          </>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" onClick={() => this.showModal(null)}>\r\n          Добавить запись\r\n        </Button>\r\n        <ModalForm\r\n          wrappedComponentRef={this.saveFormRef}\r\n          visible={this.state.isModalOpen}\r\n          onCancel={this.handleModalCancel}\r\n          onOk={this.handleModalOk}\r\n          record={this.state.modalRecord}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Table\r\n          columns={columnsWithButtons}\r\n          dataSource={tickets}\r\n          expandedRowRender={TicketDetails}\r\n          pagination={false}\r\n          size=\"middle\"\r\n          rowClassName={(record, index) =>\r\n            record.isopen ? 'ticket-opened' : 'ticket-closed'\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableTickets;\r\n","// https://alligator.io/react/simple-authorization/\r\n\r\nexport const isAuthenticated = user => !!user;\r\n\r\nexport const isAllowed = (user, rights) =>\r\n  rights.some(right => user.rights.includes(right));\r\n\r\nexport const hasRole = (user, roles) =>\r\n  roles.some(role => user.roles.includes(role));\r\n","import React from 'react';\r\nimport TableTickets from './TableTickets';\r\nimport TableTicketsAdmin from './TableTicketsAdmin';\r\nimport { LocaleProvider, Menu, Layout, Icon } from 'antd';\r\nimport ru_RU from 'antd/lib/locale-provider/ru_RU';\r\nimport { BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom';\r\nimport { hasRole, isAllowed } from './auth';\r\n\r\nconst user = {\r\n  roles: ['admin'],\r\n  rights: ['can_view_articles'],\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: user,\r\n    };\r\n  }\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <LocaleProvider locale={ru_RU}>\r\n        <BrowserRouter>\r\n          <Layout>\r\n            <Layout.Header>\r\n              <div className=\"h-logo\">IVR</div>\r\n              <Menu\r\n                mode=\"horizontal\"\r\n                theme=\"dark\"\r\n                style={{ lineHeight: '64px' }}\r\n              >\r\n                <Menu.Item>\r\n                  <Link to=\"/\">Просмотр записей</Link>\r\n                </Menu.Item>\r\n                {hasRole(user, ['admin']) && (\r\n                  <Menu.Item>\r\n                    <Link to=\"admin\">Администрирование</Link>\r\n                  </Menu.Item>\r\n                )}\r\n              </Menu>\r\n              <div className=\"h-user\">\r\n                <Icon\r\n                  type={user.roles.includes('admin') ? 'logout' : 'login'}\r\n                  title={user.roles.includes('admin') ? 'logout' : 'login'}\r\n                  onClick={() =>\r\n                    this.setState(prevState => ({\r\n                      user: {\r\n                        roles: prevState.user.roles.includes('admin')\r\n                          ? ['user']\r\n                          : ['admin'],\r\n                      },\r\n                    }))\r\n                  }\r\n                />\r\n              </div>\r\n            </Layout.Header>\r\n            <Layout.Content style={{ padding: '0 50px' }}>\r\n              <div\r\n                style={{\r\n                  background: '#fff',\r\n                  padding: 24,\r\n                  minHeight: 'calc(100vh - 64px - 68px)',\r\n                }}\r\n              >\r\n                {/* <h1>IT Service Management</h1> */}\r\n\r\n                <Switch>\r\n                  <Redirect exact from=\"/\" to=\"/IVR/\" />\r\n                  <Route exact path=\"/IVR\" component={TableTickets} />\r\n                  {hasRole(user, ['admin']) && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/IVR/admin\"\r\n                      component={TableTicketsAdmin}\r\n                    />\r\n                  )}\r\n                  <Route component={() => <div>404. Page Not Found</div>} />\r\n                </Switch>\r\n              </div>\r\n            </Layout.Content>\r\n            <Layout.Footer style={{ textAlign: 'center' }}>\r\n              IVR Management ©\r\n            </Layout.Footer>\r\n          </Layout>\r\n        </BrowserRouter>\r\n      </LocaleProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}